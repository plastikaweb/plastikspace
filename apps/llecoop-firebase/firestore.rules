rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {

    function isAuthenticated() {
      return request.auth.uid != null;
    }

    function isVerified() {
      return request.auth.token.email_verified != false;
    }

    function isAdmin() {
      return 'isAdmin' in request.auth.token;
    }

    function hasSociAccess() {
    	return isAuthenticated() && isVerified();
    }

    function hasAdminAccess() {
    	return isAuthenticated() && isVerified() && isAdmin();
    }

    match /category/{categoryId} {
      allow read, write: if hasAdminAccess();
    }

    match /product/{productId} {
      allow read, write: if hasAdminAccess();
    }

    match /user/{userId} {
      allow read, write: if hasAdminAccess() || request.auth.uid == userId;
    }

    match /order-list/{orderListId} {
      allow read: if hasAdminAccess() || (hasSociAccess() && resource.data.status == 'progress');
      allow write: if hasAdminAccess();
    }

    match /{path=**}/orders/{orderId} {
      allow read: if hasAdminAccess() || resource.data.userId == request.auth.uid;
      allow delete, update: if (isAuthenticated() && resource.data.userId == request.auth.uid) || isAdmin();
      allow create: if isAuthenticated() && request.resource.data.userId == request.auth.uid;
  	}
  }
}